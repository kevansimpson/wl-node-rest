service: wl-node-rest

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  tableName: 'wines-table-${self:provider.stage}'
  dynamodb:
    start:
      migrate: true

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["WinesDynamoDBTable", "Arn" ] }
  environment:
    WINES_TABLE: ${self:custom.tableName}

functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
  getWine:
    handler: index.handler
    events:
      - http: 'GET /wines/{proxy+}'
  createWine:
    handler: index.handler
    events:
      - http: 'POST /wines'

resources:
  Resources:
    WinesDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: wineId
            AttributeType: S
        KeySchema:
          -
            AttributeName: wineId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName} 